{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/FeedBack/FeedBack.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","opt","type","onClick","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","FeedBack","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","target","textContent","toLowerCase","prevState","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAkBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCLQ,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAAQC,KAAK,SAAmBC,QAASJ,EAAzC,SACGE,EAAIG,cAAcC,MAAM,EAAG,GAAKJ,EAAII,MAAM,IADlBJ,QCJnC,IAmBeK,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KAEV,yCAAYC,EAAZ,OACA,qDAAwBC,EAAxB,WCEWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEE,SAASC,IAAY,IAAD,EACTC,mBAAS,GADA,mBAC1BR,EAD0B,KACpBS,EADoB,OAEHD,mBAAS,GAFN,mBAE1BP,EAF0B,KAEjBS,EAFiB,OAGXF,mBAAS,GAHE,mBAG1BN,EAH0B,KAGrBS,EAHqB,KAwB3BC,EAAqBZ,EAAOC,EAAUC,EACtCW,EAAkCC,KAAKC,MACnC,IAAPf,EAAcY,GAKjB,OACE,gCACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAACE,EAAD,CAAiBC,QALR,CAAC,OAAQ,UAAW,OAKKC,gBA7BlB,SAACwB,GAGrB,OAFgBA,EAAMC,OAAOC,YAAYC,eAGvC,IAAK,OACHV,GAAQ,SAACW,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHV,GAAW,SAACU,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHT,GAAO,SAACS,GAAD,OAAeA,EAAY,WAoBpC,cAAC,EAAD,CAAShC,MAAM,aAAf,SAC0B,IAAvBwB,EACC,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,EACPR,mBAAoBS,IAGtB,cAAC,EAAD,CAAcP,QAAQ,2B,ICxCjBe,E,4JATb,WACE,OACE,8BACE,cAACd,EAAD,U,GAJUe,a,MCGlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d8e90a06.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((opt) => (\r\n        <button type=\"button\" key={opt} onClick={onLeaveFeedback}>\r\n          {opt.toUpperCase().slice(0, 1) + opt.slice(1)}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n\r\n    <li>Total: {total} </li>\r\n    <li>Positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState } from \"react\";\r\nimport Section from \"../Section/Section\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification\";\r\n//import { func } from \"prop-types\";\r\n\r\nexport default function FeedBack() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const countFeedback = (event) => {\r\n    const btnName = event.target.textContent.toLowerCase();\r\n\r\n    switch (btnName) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const countTotalFeedback = good + neutral + bad;\r\n  const countPositiveFeedbackPercentage = Math.round(\r\n    (good * 100) / countTotalFeedback\r\n  );\r\n\r\n  const optBtn = [\"good\", \"neutral\", \"bad\"];\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={optBtn} onLeaveFeedback={countFeedback} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback !== 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positivePercentage={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport FeedBack from \"./components/FeedBack\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FeedBack />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}